---
import BaseLayout from '../layouts/BaseLayout.astro';

// Get Formspree form ID from build-time variable
const formspreeFormId = __FORMSPREE_FORM_ID__;
const formAction = `https://formspree.io/f/${formspreeFormId}`;
---

<BaseLayout title="Contact - HardCodedLife" description="Get in touch with HardCodedLife">
  <h1>Contact Me</h1>
  
  <div class="contact-content">
    <p>
      I'm always interested in connecting with fellow developers, discussing ideas, 
      or exploring collaboration opportunities. Feel free to reach out!
    </p>
    
    <div class="contact-methods">
      <div class="contact-method">
        <h2>ðŸ“§ Email</h2>
        <p>The best way to reach me for professional inquiries or collaboration.</p>
        <a href="mailto:hello@hardcodedlife.dev" class="contact-link">hello@hardcodedlife.dev</a>
      </div>
      
      <div class="contact-method">
        <h2>ðŸ’¬ GitHub</h2>
        <p>Check out my projects and contributions on GitHub.</p>
        <a href="https://github.com/HardCodedLife" target="_blank" rel="noopener noreferrer" class="contact-link">
          @HardCodedLife
        </a>
      </div>
      
      <div class="contact-method">
        <h2>ðŸ’¼ LinkedIn</h2>
        <p>Connect with me professionally on LinkedIn.</p>
        <a href="#" target="_blank" rel="noopener noreferrer" class="contact-link">
          LinkedIn Profile
        </a>
      </div>
    </div>
    
    <div class="contact-form-section">
      <h2>Send a Message</h2>
      <p>You can also use the form below to send me a message directly:</p>
      
      <form class="contact-form" action={formAction} method="POST" id="contact-form">
        <!-- Hidden input to identify the form to Formspree -->
        <input type="hidden" name="_subject" value="New message from HardCodedLife website" />
        <!-- Redirect to success page for users without JavaScript -->
        <input type="hidden" name="_next" value="/contact/success/" />
        <!-- Honeypot spam protection -->
        <input type="text" name="_gotcha" style="display: none;" />
        <div class="form-group">
          <label for="name">Name</label>
          <input type="text" id="name" name="name" required>
        </div>
        
        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" name="email" required>
        </div>
        
        <div class="form-group">
          <label for="subject">Subject</label>
          <input type="text" id="subject" name="subject" required>
        </div>
        
        <div class="form-group">
          <label for="message">Message</label>
          <textarea id="message" name="message" rows="5" required></textarea>
        </div>
        
        <button type="submit" class="submit-btn">Send Message</button>
      </form>
      
      <!-- Status messages -->
      <div id="form-messages" class="form-messages" style="display: none;"></div>
      
      <p class="form-note">
        <em>Your message will be sent directly to my email. I'll get back to you as soon as possible!</em>
      </p>
    </div>
  </div>
</BaseLayout>

<style>
  h1 {
    color: #333;
    border-bottom: 2px solid #007bff;
    padding-bottom: 0.5rem;
    margin-bottom: 2rem;
  }
  
  .contact-content > p {
    font-size: 1.1rem;
    line-height: 1.6;
    color: #555;
    margin-bottom: 2rem;
  }
  
  .contact-methods {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    margin-bottom: 3rem;
  }
  
  .contact-method {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    border-left: 4px solid #007bff;
  }
  
  .contact-method h2 {
    color: #333;
    margin: 0 0 0.5rem 0;
    font-size: 1.2rem;
  }
  
  .contact-method p {
    color: #666;
    margin: 0 0 1rem 0;
    line-height: 1.5;
  }
  
  .contact-link {
    color: #007bff;
    text-decoration: none;
    font-weight: 500;
  }
  
  .contact-link:hover {
    text-decoration: underline;
  }
  
  .contact-form-section {
    background: #f8f9fa;
    padding: 2rem;
    border-radius: 8px;
  }
  
  .contact-form-section h2 {
    color: #333;
    margin: 0 0 1rem 0;
  }
  
  .contact-form-section > p {
    color: #666;
    margin-bottom: 1.5rem;
    line-height: 1.5;
  }
  
  .contact-form {
    max-width: 600px;
  }
  
  .form-group {
    margin-bottom: 1.5rem;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: #333;
    font-weight: 500;
  }
  
  .form-group input,
  .form-group textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
    font-family: inherit;
    box-sizing: border-box;
  }
  
  .form-group input:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
  }
  
  .submit-btn {
    background: #007bff;
    color: white;
    padding: 0.75rem 2rem;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
    font-weight: 500;
  }
  
  .submit-btn:hover {
    background: #0056b3;
  }
  
  .form-note {
    margin-top: 1rem;
    color: #666;
    font-size: 0.9rem;
  }
  
  .form-messages {
    margin: 1rem 0;
    padding: 1rem;
    border-radius: 4px;
    font-weight: 500;
  }
  
  .form-messages.success {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }
  
  .form-messages.error {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }
  
  .submit-btn:disabled {
    background: #6c757d;
    cursor: not-allowed;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const messagesDiv = document.getElementById('form-messages') as HTMLDivElement;
  const submitBtn = form?.querySelector('.submit-btn') as HTMLButtonElement;
  
  if (!form || !messagesDiv || !submitBtn) {
    console.error('Contact form elements not found');
    return;
  }
  
  form.addEventListener('submit', async function(e: Event) {
    e.preventDefault();
    
    // Show loading state
    submitBtn.disabled = true;
    submitBtn.textContent = 'Sending...';
    
    // Hide previous messages
    messagesDiv.style.display = 'none';
    messagesDiv.className = 'form-messages';
    
    try {
      const formData = new FormData(form);
      const response = await fetch(form.action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        }
      });
      
      if (response.ok) {
        showMessage('success', 'Thank you for your message! I\'ll get back to you soon.');
        form.reset();
      } else {
        const data = await response.json();
        if (data.errors) {
          showMessage('error', 'Please fix the following errors: ' + data.errors.map((error: any) => error.message).join(', '));
        } else {
          showMessage('error', 'Oops! There was a problem sending your message. Please try again.');
        }
      }
    } catch (error) {
      showMessage('error', 'Oops! There was a problem sending your message. Please check your connection and try again.');
    } finally {
      // Reset button state
      submitBtn.disabled = false;
      submitBtn.textContent = 'Send Message';
    }
  });
  
  function showMessage(type: string, message: string): void {
    messagesDiv.textContent = message;
    messagesDiv.className = `form-messages ${type}`;
    messagesDiv.style.display = 'block';
    messagesDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
  }
});
</script>